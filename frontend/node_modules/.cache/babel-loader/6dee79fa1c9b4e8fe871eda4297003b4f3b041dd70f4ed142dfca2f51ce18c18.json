{"ast":null,"code":"var _jsxFileName = \"/home/max/Diplomarbeit/Development-Diplomarbeit/simple_project_linux/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Register from './Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [response, setResponse] = useState(null);\n  const [messages, setMessages] = useState([]); // State to hold messages\n  const [isInputMode, setIsInputMode] = useState(true); // Toggle input/output mode\n\n  // Fetch all messages when switching to output mode\n  useEffect(() => {\n    if (!isInputMode) {\n      const fetchMessages = async () => {\n        try {\n          const res = await fetch('http://localhost:3001/api/messages');\n          const data = await res.json();\n          setMessages(data); // Update state with fetched messages\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        }\n      };\n      fetchMessages();\n    }\n  }, [isInputMode]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const res = await fetch('http://localhost:3001/api/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: message\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setResponse(`Message saved with ID: ${data.id}`);\n        setMessage('');\n      } else {\n        setResponse(`Error: ${data.error}`);\n      }\n    } catch (error) {\n      console.error('Error submitting message:', error);\n      setResponse('Error submitting message');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isInputMode ? 'Submit a Message' : 'Messages'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsInputMode(!isInputMode),\n      children: [\"Switch to \", isInputMode ? 'View Messages' : 'Submit a Message']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), isInputMode ?\n    /*#__PURE__*/\n    // Input Form\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Message:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this) :\n    /*#__PURE__*/\n    // Output View: List of Messages\n    _jsxDEV(\"div\", {\n      children: [response && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg.text\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this) // Display each message\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the User Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6u5rJ4gitSAsrAPd7ULR9AgyvGM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Register","jsxDEV","_jsxDEV","App","_s","message","setMessage","response","setResponse","messages","setMessages","isInputMode","setIsInputMode","fetchMessages","res","fetch","data","json","error","console","handleSubmit","event","preventDefault","method","headers","body","JSON","stringify","text","ok","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","e","target","map","msg","_c","$RefreshReg$"],"sources":["/home/max/Diplomarbeit/Development-Diplomarbeit/simple_project_linux/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Register from './Register';\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [response, setResponse] = useState(null);\n  const [messages, setMessages] = useState([]); // State to hold messages\n  const [isInputMode, setIsInputMode] = useState(true); // Toggle input/output mode\n\n  // Fetch all messages when switching to output mode\n  useEffect(() => {\n    if (!isInputMode) {\n      const fetchMessages = async () => {\n        try {\n          const res = await fetch('http://localhost:3001/api/messages');\n          const data = await res.json();\n          setMessages(data); // Update state with fetched messages\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        }\n      };\n      fetchMessages();\n    }\n  }, [isInputMode]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const res = await fetch('http://localhost:3001/api/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ text: message }),\n      });\n\n      const data = await res.json();\n      if (res.ok) {\n        setResponse(`Message saved with ID: ${data.id}`);\n        setMessage('');\n      } else {\n        setResponse(`Error: ${data.error}`);\n      }\n    } catch (error) {\n      console.error('Error submitting message:', error);\n      setResponse('Error submitting message');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n    <h1>{isInputMode ? 'Submit a Message' : 'Messages'}</h1>\n\n    <button onClick={() => setIsInputMode(!isInputMode)}>\n    Switch to {isInputMode ? 'View Messages' : 'Submit a Message'}\n    </button>\n\n    {isInputMode ? (\n      // Input Form\n      <form onSubmit={handleSubmit}>\n      <label>\n      Message:\n      <input\n      type=\"text\"\n      value={message}\n      onChange={(e) => setMessage(e.target.value)}\n      />\n      </label>\n      <button type=\"submit\">Submit</button>\n      </form>\n    ) : (\n      // Output View: List of Messages\n      <div>\n      {response && <p>{response}</p>}\n      <ul>\n      {messages.map((msg) => (\n        <li key={msg.id}>{msg.text}</li> // Display each message\n      ))}\n      </ul>\n      </div>\n    )}\n    <div>\n    <h1>Welcome to the User Registration</h1>\n    <Register />\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}