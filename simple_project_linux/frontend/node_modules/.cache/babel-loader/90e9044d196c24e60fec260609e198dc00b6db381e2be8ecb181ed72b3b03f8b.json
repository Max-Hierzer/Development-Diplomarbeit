{"ast":null,"code":"var _jsxFileName = \"/home/max/Diplomarbeit/learning_project/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [response, setResponse] = useState(null);\n  const [messages, setMessages] = useState([]); // State to hold the messages\n\n  // Fetch all messages when the component mounts\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const res = await fetch('http://localhost:3001/api/messages');\n        const data = await res.json();\n        setMessages(data); // Update the state with fetched messages\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, []); // Empty dependency array to run only once on mount\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const res = await fetch('http://localhost:3001/api/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: message\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setResponse(`Message saved with ID: ${data.id}`);\n        setMessage('');\n        // Fetch messages again to update the list\n        const fetchMessages = async () => {\n          const res = await fetch('http://localhost:3001/api/messages');\n          const data = await res.json();\n          setMessages(data);\n        };\n        fetchMessages();\n      } else {\n        setResponse(`Error: ${data.error}`);\n      }\n    } catch (error) {\n      console.error('Error submitting message:', error);\n      setResponse('Error submitting message');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Submit a Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Message:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), response && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: msg.text\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this) // Display each message\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2vmgcuotAYg7IjZtHWD8sNVqSvU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","message","setMessage","response","setResponse","messages","setMessages","fetchMessages","res","fetch","data","json","error","console","handleSubmit","event","preventDefault","method","headers","body","JSON","stringify","text","ok","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","map","msg","_c","$RefreshReg$"],"sources":["/home/max/Diplomarbeit/learning_project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [response, setResponse] = useState(null);\n  const [messages, setMessages] = useState([]); // State to hold the messages\n\n  // Fetch all messages when the component mounts\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const res = await fetch('http://localhost:3001/api/messages');\n        const data = await res.json();\n        setMessages(data); // Update the state with fetched messages\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n\n    fetchMessages();\n  }, []); // Empty dependency array to run only once on mount\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const res = await fetch('http://localhost:3001/api/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ text: message }),\n      });\n\n      const data = await res.json();\n      if (res.ok) {\n        setResponse(`Message saved with ID: ${data.id}`);\n        setMessage('');\n        // Fetch messages again to update the list\n        const fetchMessages = async () => {\n          const res = await fetch('http://localhost:3001/api/messages');\n          const data = await res.json();\n          setMessages(data);\n        };\n        fetchMessages();\n      } else {\n        setResponse(`Error: ${data.error}`);\n      }\n    } catch (error) {\n      console.error('Error submitting message:', error);\n      setResponse('Error submitting message');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n    <h1>Submit a Message</h1>\n    <form onSubmit={handleSubmit}>\n    <label>\n    Message:\n    <input\n    type=\"text\"\n    value={message}\n    onChange={(e) => setMessage(e.target.value)}\n    />\n    </label>\n    <button type=\"submit\">Submit</button>\n    </form>\n    {response && <p>{response}</p>}\n\n    <h2>Messages</h2>\n    <ul>\n    {messages.map((msg) => (\n      <li key={msg.id}>{msg.text}</li> // Display each message\n    ))}\n    </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}